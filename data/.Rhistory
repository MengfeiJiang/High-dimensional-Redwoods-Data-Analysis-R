labels=date_format('%H:%M', tz = 'PST')) +
labs(x = "Time", y = "Height", fill = "Temperature") +
theme(axis.text.x = element_text(angle = 90, size = 10, hjust =1, vjust = 0.5),
axis.text.y = element_text(size = 10),
axis.title.x = element_text(size = 16),
axis.title.y = element_text(size = 16),
legend.title = element_text(size =14),
legend.key.size = unit(0.6, "cm"),
legend.margin = unit(0, "cm"),
strip.text.x = element_text(size = 12)) +
facet_wrap(~week, ncol = 3, labeller = as_labeller(week_labeller))
int_melt_mean_temp %>%
ggplot() +
geom_point(mapping = aes(strptime(actual_hours, format = "%H:%M:%S", tz = "PST"),
y=humid_temp, color = Height)) +
scale_color_gradient(low = "gold1", high = "red3") +
scale_x_datetime(breaks=date_breaks('2 hour'),
labels=date_format('%H:%M', tz = 'PST')) +
labs(x = "Time", y = "Height", color = "Temperature") +
theme(axis.text.x = element_text(angle = 90, size = 10, hjust =1, vjust = 0.5),
axis.text.y = element_text(size = 10),
axis.title.x = element_text(size = 16),
axis.title.y = element_text(size = 16),
legend.title = element_text(size =14),
legend.key.size = unit(0.6, "cm"),
legend.margin = unit(0, "cm"),
strip.text.x = element_text(size = 12)) +
facet_wrap(~week, ncol = 3, labeller = as_labeller(week_labeller))
int_melt_mean_temp <- dcast(int_melt %>% filter(variable == "humid_temp"),
Height + week + actual_hours ~ variable,
fun.aggregate = mean)
int_melt_mean_temp %>%
ggplot() +
geom_point(mapping = aes(strptime(actual_hours, format = "%H:%M:%S", tz = "PST"),
y=humid_temp, color = Height)) +
scale_color_gradient(low = "gold1", high = "red3") +
scale_x_datetime(breaks=date_breaks('2 hour'),
labels=date_format('%H:%M', tz = 'PST')) +
labs(x = "Time", y = "Height", color = "Temperature") +
theme(axis.text.x = element_text(angle = 90, size = 10, hjust =1, vjust = 0.5),
axis.text.y = element_text(size = 10),
axis.title.x = element_text(size = 16),
axis.title.y = element_text(size = 16),
legend.title = element_text(size =14),
legend.key.size = unit(0.6, "cm"),
legend.margin = unit(0, "cm"),
strip.text.x = element_text(size = 12)) +
facet_wrap(~week, ncol = 3, labeller = as_labeller(week_labeller))
int_melt_mean_temp %>%
ggplot() +
geom_point(mapping = aes(strptime(actual_hours, format = "%H:%M:%S", tz = "PST"),
y=humid_temp, color = Height), size = 0.1) +
scale_color_gradient(low = "gold1", high = "red3") +
scale_x_datetime(breaks=date_breaks('2 hour'),
labels=date_format('%H:%M', tz = 'PST')) +
labs(x = "Time", y = "Height", color = "Temperature") +
theme(axis.text.x = element_text(angle = 90, size = 10, hjust =1, vjust = 0.5),
axis.text.y = element_text(size = 10),
axis.title.x = element_text(size = 16),
axis.title.y = element_text(size = 16),
legend.title = element_text(size =14),
legend.key.size = unit(0.6, "cm"),
legend.margin = unit(0, "cm"),
strip.text.x = element_text(size = 12)) +
facet_wrap(~week, ncol = 3, labeller = as_labeller(week_labeller))
int_melt_mean_temp %>%
ggplot() +
geom_point(mapping = aes(strptime(actual_hours, format = "%H:%M:%S", tz = "PST"),
y=humid_temp, color = Height), size = 0.1) +
scale_color_gradient(low = "coral4", high = "lightskyblue") +
scale_x_datetime(breaks=date_breaks('2 hour'),
labels=date_format('%H:%M', tz = 'PST')) +
labs(x = "Time", y = "Height", color = "Height") +
theme(axis.text.x = element_text(angle = 90, size = 10, hjust =1, vjust = 0.5),
axis.text.y = element_text(size = 10),
axis.title.x = element_text(size = 16),
axis.title.y = element_text(size = 16),
legend.title = element_text(size =14),
legend.key.size = unit(0.6, "cm"),
legend.margin = unit(0, "cm"),
strip.text.x = element_text(size = 12)) +
facet_wrap(~week, ncol = 3, labeller = as_labeller(week_labeller))
int_melt_mean_temp %>%
ggplot() +
geom_point(mapping = aes(strptime(actual_hours, format = "%H:%M:%S", tz = "PST"),
y=humid_temp, color = Height), size = 0.05) +
scale_color_gradient(low = "coral4", high = "lightskyblue") +
scale_x_datetime(breaks=date_breaks('2 hour'),
labels=date_format('%H:%M', tz = 'PST')) +
labs(x = "Time", y = "Height", color = "Height") +
theme(axis.text.x = element_text(angle = 90, size = 10, hjust =1, vjust = 0.5),
axis.text.y = element_text(size = 10),
axis.title.x = element_text(size = 16),
axis.title.y = element_text(size = 16),
legend.title = element_text(size =14),
legend.key.size = unit(0.6, "cm"),
legend.margin = unit(0, "cm"),
strip.text.x = element_text(size = 12)) +
facet_wrap(~week, ncol = 3, labeller = as_labeller(week_labeller))
int_melt_mean_temp %>%
ggplot() +
geom_point(mapping = aes(strptime(actual_hours, format = "%H:%M:%S", tz = "PST"),
y=humid_temp, color = Height), size = 0.02) +
scale_color_gradient(low = "coral4", high = "lightskyblue") +
scale_x_datetime(breaks=date_breaks('2 hour'),
labels=date_format('%H:%M', tz = 'PST')) +
labs(x = "Time", y = "Height", color = "Height") +
theme(axis.text.x = element_text(angle = 90, size = 10, hjust =1, vjust = 0.5),
axis.text.y = element_text(size = 10),
axis.title.x = element_text(size = 16),
axis.title.y = element_text(size = 16),
legend.title = element_text(size =14),
legend.key.size = unit(0.6, "cm"),
legend.margin = unit(0, "cm"),
strip.text.x = element_text(size = 12)) +
facet_wrap(~week, ncol = 3, labeller = as_labeller(week_labeller))
int_melt_mean_humid %>%
ggplot() +
geom_point(mapping = aes(strptime(actual_hours, format = "%H:%M:%S", tz = "PST"),
y=humid_adj, color = Height), size = 0.02) +
scale_color_gradient(low = "coral4", high = "lightskyblue") +
scale_x_datetime(breaks=date_breaks('2 hour'),
labels=date_format('%H:%M', tz = 'PST')) +
labs(x = "Time", y = "Adjusted humidity", color = "Height") +
theme(axis.text.x = element_text(angle = 90, size = 10, hjust =1, vjust = 0.5),
axis.text.y = element_text(size = 10),
axis.title.x = element_text(size = 16),
axis.title.y = element_text(size = 16),
legend.title = element_text(size =14),
legend.key.size = unit(0.6, "cm"),
legend.margin = unit(0, "cm"),
strip.text.x = element_text(size = 12)) +
facet_wrap(~week, ncol = 3, labeller = as_labeller(week_labeller))
int_melt_mean_hamatop %>%
ggplot() +
geom_point(mapping = aes(strptime(actual_hours, format = "%H:%M:%S", tz = "PST"),
y=hamatop, color = Height), size = 0.02) +
scale_color_gradient(low = "coral4", high = "lightskyblue") +
scale_x_datetime(breaks=date_breaks('2 hour'),
labels=date_format('%H:%M', tz = 'PST')) +
labs(x = "Time", y = "Incident PAR", color = "Height") +
theme(axis.text.x = element_text(angle = 90, size = 10, hjust =1, vjust = 0.5),
axis.text.y = element_text(size = 10),
axis.title.x = element_text(size = 16),
axis.title.y = element_text(size = 16),
legend.title = element_text(size =14),
legend.key.size = unit(0.6, "cm"),
legend.margin = unit(0, "cm"),
strip.text.x = element_text(size = 12)) +
facet_wrap(~week, ncol = 3, labeller = as_labeller(week_labeller)) +
coord_trans(y = "sqrt")
int_melt_mean_hamabot %>%
ggplot() +
geom_point(mapping = aes(strptime(actual_hours, format = "%H:%M:%S", tz = "PST"),
y=hamabot, color = Height), size = 0.02) +
scale_color_gradient(low = "coral4", high = "lightskyblue") +
scale_x_datetime(breaks=date_breaks('2 hour'),
labels=date_format('%H:%M', tz = 'PST')) +
labs(x = "Time", y = "Reflected PAR", color = "Height") +
theme(axis.text.x = element_text(angle = 90, size = 10, hjust =1, vjust = 0.5),
axis.text.y = element_text(size = 10),
axis.title.x = element_text(size = 16),
axis.title.y = element_text(size = 16),
legend.title = element_text(size =14),
legend.key.size = unit(0.6, "cm"),
legend.margin = unit(0, "cm"),
strip.text.x = element_text(size = 12)) +
facet_wrap(~week, ncol = 3, labeller = as_labeller(week_labeller))
int_melt_mean_hamabot %>%
ggplot() +
geom_point(mapping = aes(strptime(actual_hours, format = "%H:%M:%S", tz = "PST"),
y=hamabot, color = Height), size = 0.02) +
scale_color_gradient(low = "coral4", high = "lightskyblue") +
scale_x_datetime(breaks=date_breaks('2 hour'),
labels=date_format('%H:%M', tz = 'PST')) +
labs(x = "Time", y = "Reflected PAR", color = "Height") +
theme(axis.text.x = element_text(angle = 90, size = 10, hjust =1, vjust = 0.5),
axis.text.y = element_text(size = 10),
axis.title.x = element_text(size = 16),
axis.title.y = element_text(size = 16),
legend.title = element_text(size =14),
legend.key.size = unit(0.6, "cm"),
legend.margin = unit(0, "cm"),
strip.text.x = element_text(size = 12)) +
facet_wrap(~week, ncol = 3, labeller = as_labeller(week_labeller)) +
coord_trans(y = "sqrt")
int_melt_mean_hamatop %>%
ggplot() +
geom_point(mapping = aes(strptime(actual_hours, format = "%H:%M:%S", tz = "PST"),
y=hamatop, color = Height), size = 0.02) +
scale_color_gradient(low = "coral4", high = "lightskyblue") +
scale_x_datetime(breaks=date_breaks('2 hour'),
labels=date_format('%H:%M', tz = 'PST')) +
labs(x = "Time", y = "Incident PAR", color = "Height") +
theme(axis.text.x = element_text(angle = 90, size = 10, hjust =1, vjust = 0.5),
axis.text.y = element_text(size = 10),
axis.title.x = element_text(size = 16),
axis.title.y = element_text(size = 16),
legend.title = element_text(size =14),
legend.key.size = unit(0.6, "cm"),
legend.margin = unit(0, "cm"),
strip.text.x = element_text(size = 12)) +
facet_wrap(~week, ncol = 3, labeller = as_labeller(week_labeller)) +
coord_trans(y = "sqrt")
int_melt_mean_humid %>%
ggplot() +
geom_point(mapping = aes(strptime(actual_hours, format = "%H:%M:%S", tz = "PST"),
y=humid_adj, color = Height), size = 0.02) +
scale_color_gradient(low = "coral4", high = "lightskyblue") +
scale_x_datetime(breaks=date_breaks('2 hour'),
labels=date_format('%H:%M', tz = 'PST')) +
labs(x = "Time", y = "Adjusted humidity", color = "Height") +
theme(axis.text.x = element_text(angle = 90, size = 10, hjust =1, vjust = 0.5),
axis.text.y = element_text(size = 10),
axis.title.x = element_text(size = 16),
axis.title.y = element_text(size = 16),
legend.title = element_text(size =14),
legend.key.size = unit(0.6, "cm"),
legend.margin = unit(0, "cm"),
strip.text.x = element_text(size = 12)) +
facet_wrap(~week, ncol = 3, labeller = as_labeller(week_labeller))
int_melt_mean_temp %>%
ggplot() +
geom_point(mapping = aes(strptime(actual_hours, format = "%H:%M:%S", tz = "PST"),
y=humid_temp, color = Height), size = 0.02) +
scale_color_gradient(low = "coral4", high = "lightskyblue") +
scale_x_datetime(breaks=date_breaks('2 hour'),
labels=date_format('%H:%M', tz = 'PST')) +
labs(x = "Time", y = "Height", color = "Height") +
theme(axis.text.x = element_text(angle = 90, size = 10, hjust =1, vjust = 0.5),
axis.text.y = element_text(size = 10),
axis.title.x = element_text(size = 16),
axis.title.y = element_text(size = 16),
legend.title = element_text(size =14),
legend.key.size = unit(0.6, "cm"),
legend.margin = unit(0, "cm"),
strip.text.x = element_text(size = 12)) +
facet_wrap(~week, ncol = 3, labeller = as_labeller(week_labeller))
int_melt_mean_temp %>%
ggplot() +
geom_point(mapping = aes(strptime(actual_hours, format = "%H:%M:%S", tz = "PST"),
y=humid_temp, color = Height), size = 0.02) +
scale_color_gradient(low = "coral4", high = "lightskyblue") +
scale_x_datetime(breaks=date_breaks('2 hour'),
labels=date_format('%H:%M', tz = 'PST')) +
labs(x = "Time", y = "Temperature", color = "Height") +
theme(axis.text.x = element_text(angle = 90, size = 10, hjust =1, vjust = 0.5),
axis.text.y = element_text(size = 10),
axis.title.x = element_text(size = 16),
axis.title.y = element_text(size = 16),
legend.title = element_text(size =14),
legend.key.size = unit(0.6, "cm"),
legend.margin = unit(0, "cm"),
strip.text.x = element_text(size = 12)) +
facet_wrap(~week, ncol = 3, labeller = as_labeller(week_labeller))
int_melt_mean_temp %>%
ggplot() +
geom_point(mapping = aes(strptime(actual_hours, format = "%H:%M:%S", tz = "PST"),
y=humid_temp, color = Height), size = 0.1) +
scale_color_gradient(low = "coral4", high = "lightskyblue") +
scale_x_datetime(breaks=date_breaks('2 hour'),
labels=date_format('%H:%M', tz = 'PST')) +
labs(x = "Time", y = "Temperature", color = "Height") +
theme(axis.text.x = element_text(angle = 90, size = 10, hjust =1, vjust = 0.5),
axis.text.y = element_text(size = 10),
axis.title.x = element_text(size = 16),
axis.title.y = element_text(size = 16),
legend.title = element_text(size =14),
legend.key.size = unit(0.6, "cm"),
legend.margin = unit(0, "cm"),
strip.text.x = element_text(size = 12)) +
facet_wrap(~week, ncol = 3, labeller = as_labeller(week_labeller))
int_melt_mean_humid %>%
ggplot() +
geom_point(mapping = aes(strptime(actual_hours, format = "%H:%M:%S", tz = "PST"),
y=humid_adj, color = Height), size = 0.1) +
scale_color_gradient(low = "coral4", high = "lightskyblue") +
scale_x_datetime(breaks=date_breaks('2 hour'),
labels=date_format('%H:%M', tz = 'PST')) +
labs(x = "Time", y = "Adjusted humidity", color = "Height") +
theme(axis.text.x = element_text(angle = 90, size = 10, hjust =1, vjust = 0.5),
axis.text.y = element_text(size = 10),
axis.title.x = element_text(size = 16),
axis.title.y = element_text(size = 16),
legend.title = element_text(size =14),
legend.key.size = unit(0.6, "cm"),
legend.margin = unit(0, "cm"),
strip.text.x = element_text(size = 12)) +
facet_wrap(~week, ncol = 3, labeller = as_labeller(week_labeller))
int_melt_mean_hamatop %>%
ggplot() +
geom_point(mapping = aes(strptime(actual_hours, format = "%H:%M:%S", tz = "PST"),
y=hamatop, color = Height), size = 0.1) +
scale_color_gradient(low = "coral4", high = "lightskyblue") +
scale_x_datetime(breaks=date_breaks('2 hour'),
labels=date_format('%H:%M', tz = 'PST')) +
labs(x = "Time", y = "Incident PAR", color = "Height") +
theme(axis.text.x = element_text(angle = 90, size = 10, hjust =1, vjust = 0.5),
axis.text.y = element_text(size = 10),
axis.title.x = element_text(size = 16),
axis.title.y = element_text(size = 16),
legend.title = element_text(size =14),
legend.key.size = unit(0.6, "cm"),
legend.margin = unit(0, "cm"),
strip.text.x = element_text(size = 12)) +
facet_wrap(~week, ncol = 3, labeller = as_labeller(week_labeller)) +
coord_trans(y = "sqrt")
int_melt_mean_hamabot %>%
ggplot() +
geom_point(mapping = aes(strptime(actual_hours, format = "%H:%M:%S", tz = "PST"),
y=hamabot, color = Height), size = 0.1) +
scale_color_gradient(low = "coral4", high = "lightskyblue") +
scale_x_datetime(breaks=date_breaks('2 hour'),
labels=date_format('%H:%M', tz = 'PST')) +
labs(x = "Time", y = "Reflected PAR", color = "Height") +
theme(axis.text.x = element_text(angle = 90, size = 10, hjust =1, vjust = 0.5),
axis.text.y = element_text(size = 10),
axis.title.x = element_text(size = 16),
axis.title.y = element_text(size = 16),
legend.title = element_text(size =14),
legend.key.size = unit(0.6, "cm"),
legend.margin = unit(0, "cm"),
strip.text.x = element_text(size = 12)) +
facet_wrap(~week, ncol = 3, labeller = as_labeller(week_labeller)) +
coord_trans(y = "sqrt")
mote_int %>%
ggplot(mapping = aes(x = humid_adj, y = humid_temp, color = Height)) +
geom_point(size = 0.1) +
scale_color_gradient(low = "coral4", high = "lightskyblue")
mote_int %>% select(humid_temp, humid_adj, hamatop, hamabot) %>% cor()
mote_int %>% select(humid_temp, humid_adj, hamatop, hamabot) %>%
mutate(hamatop = sqrt(hamatop), hamabot = sqrt(hamabot)) %>% cor()
mote_int %>% select(humid_temp, humid_adj, hamatop, hamabot) %>%
mutate(hamatop = log(hamatop+1), hamabot = log(hamabot+1)) %>% cor()
mote_int %>%
ggplot(mapping = aes(x = humid_adj, y = humid_temp, color = hamatop)) +
geom_point(size = 0.1) +
scale_color_gradient(low = "coral4", high = "lightskyblue")
mote_int %>%
ggplot(mapping = aes(x = humid_adj, y = humid_temp, color = Direc)) +
geom_point(size = 0.1) +
scale_color_gradient(low = "coral4", high = "lightskyblue")
mote_int %>%
ggplot(mapping = aes(x = humid_adj, y = humid_temp, color = Direc)) +
geom_point(size = 0.1)
1 % 10
1 %% 10
13 %% 10
floor(3.4)
floor(3.9)
sample(as.data.frame(matrix(1:4, nrow =2)), 2)
sample(as.data.frame(matrix(1:4, nrow =2)), 2, replace = TRUE)
sample(as.data.frame(matrix(1:4, nrow =2)), 4, replace = TRUE)
sample(as.data.frame(matrix(1:4, nrow =2)), 4, replace = TRUE)
?subset
as.data.frame(matrix(1:4, nrow =2)) %>% subset(sample(c(TRUE, FALSE), size = 4, replace = TRUE)
)
as.data.frame(matrix(1:4, nrow =2)) %>% subset(sample(c(TRUE, FALSE), size = 2, replace = TRUE)
)
sample(c(TRUE, FALSE), size = 2, replace = TRUE)
as.data.frame(matrix(1:4, nrow =2))
as.data.frame(matrix(1:4, nrow =2)) %>% subset(sample(c(TRUE, FALSE), size = 2, replace = TRUE))
as.data.frame(matrix(1:4, nrow =2)) %>% subset(sample(c(TRUE, FALSE), size = 2, replace = TRUE))
as.data.frame(matrix(1:4, nrow =2)) %>% subset(sample(c(TRUE, FALSE), size = 2, replace = TRUE))
as.data.frame(matrix(1:4, nrow =2)) %>% subset(sample(c(TRUE, FALSE), size = 2, replace = TRUE))
as.data.frame(matrix(1:4, nrow =2)) %>% subset(1:2, size = 2, replace = TRUE))
as.data.frame(matrix(1:4, nrow =2)) %>% subset(1:2, size = 2, replace = TRUE)
sample(c(TRUE, FALSE), size = 2, replace = TRUE)
sample(c(TRUE, FALSE), size = 2, replace = TRUE)
sample(c(TRUE, FALSE), size = 2, replace = TRUE)
sample(c(TRUE, FALSE), size = 2, replace = TRUE)
sample(c(TRUE, FALSE), size = 2, replace = TRUE)
?sample
as.data.frame(matrix(1:4, nrow =2)) %>% sample_n(size = 1)
as.data.frame(matrix(1:4, nrow =2)) %>% sample_n(size = 2, replace = TRUE)
as.data.frame(matrix(1:4, nrow =2)) %>% sample_n(size = 3, replace = TRUE)
as.data.frame(matrix(1:4, nrow =2)) %>% sample_n(size = 3, replace = TRUE)
as.data.frame(matrix(1:4, nrow =2)) %>% sample_n(size = 3, replace = TRUE)
as.data.frame(matrix(1:4, nrow =2)) %>% sample_n(size = 3, replace = TRUE)
as.data.frame(matrix(1:4, nrow =2)) %>% sample_n(size = 3, replace = TRUE)
get_samples <- function(mote_data, size = 10000) {
mote_ids <- unique(mote_data$mote_id)
n <- nrow(mote_data)
result <- mote_data[1:size,]
i <- 1
for (mote_id in mote_ids) {
if (mote_id != mote_ids[-1]) {
mote_size <- mote_data %>% filter(nodeid == mote_id) %>% length()
sample_mote_size <- floor(mote_size / n * size)
} else {
sample_mote_size <- size - i + 1
}
result[i:(i+sample_mote_size-1),] <- mote_data %>%
filter(nodeid == mote_id) %>% sample_n(size=sample_mote_size)
i <- i + 1
}
return(result)
}
head(get_samples(mote_int))
table(get_samples(mote_int)$nodeid / 164817)
unique(get_samples(mote_int)$nodeid)
table(get_samples(mote_int)$nodeid)
get_samples <- function(mote_data, size = 10000) {
mote_ids <- unique(mote_data$nodeid)
n <- nrow(mote_data)
result <- mote_data[1:size,]
i <- 1
for (mote_id in mote_ids) {
if (mote_id != mote_ids[-1]) {
mote_size <- mote_data %>% filter(nodeid == mote_id) %>% length()
sample_mote_size <- floor(mote_size / n * size)
} else {
sample_mote_size <- size - i + 1
}
result[i:(i+sample_mote_size-1),] <- mote_data %>%
filter(nodeid == mote_id) %>% sample_n(size=sample_mote_size)
i <- i + 1
}
return(result)
}
table(get_samples(mote_int)$nodeid)
debug(get_samples)
table(get_samples(mote_int)$nodeid)
get_samples(mote_int)$nodeid
mote_ids
mote_id
ceiling(1/10)
get_samples <- function(mote_data, size = 10000) {
mote_ids <- unique(mote_data$nodeid)
n <- nrow(mote_data)
result <- mote_data[1:size,]
i <- 1
for (mote_id in mote_ids) {
if (mote_id != mote_ids[-1]) {
mote_size <- mote_data %>% filter(nodeid == mote_id) %>% length()
sample_mote_size <- ceiling(mote_size / n * size)
} else {
sample_mote_size <- size - i + 1
}
result[i:(i+sample_mote_size-1),] <- mote_data %>%
filter(nodeid == mote_id) %>% sample_n(size=sample_mote_size)
i <- i + 1
}
return(result)
}
undebug(get_samples)
table(get_samples(mote_int)$nodeid)
table(mote_int$nodeid)
sum(table(mote_int$nodeid))
10287/164817
10287/164817 * 10000
debug(get_samples)
get_samples(mote_int)$nodeid
size
ceiling(mote_size / n * size)
mote_ids
mote_size / n
mote_size
mote_id
get_samples(mote_int)$nodeid
mote_id
length(mote_data$nodeid == mote_id)
View(mote_data)
head(mote_data$nodeid == mote_id)
sum(mote_data$nodeid == mote_id)
mote_data %>% filter(nodeid == mote_id) %>% length()
get_samples <- function(mote_data, size = 10000) {
mote_ids <- unique(mote_data$nodeid)
n <- nrow(mote_data)
result <- mote_data[1:size,]
i <- 1
for (mote_id in mote_ids) {
if (mote_id != mote_ids[-1]) {
mote_size <- sum(mote_data$nodeid == mote_id)
sample_mote_size <- ceiling(mote_size / n * size)
} else {
sample_mote_size <- size - i + 1
}
result[i:(i+sample_mote_size-1),] <- mote_data %>%
filter(nodeid == mote_id) %>% sample_n(size=sample_mote_size)
i <- i + 1
}
return(result)
}
table(get_samples(mote_int)$nodeid)
warnings()
for (i in 1:5) print(i)
debug(get_samples)
get_samples(mote_int)
table(get_samples(mote_int)$nodeid)
a
undebug(get_samples)
table(get_samples(mote_int)$nodeid)
get_samples <- function(mote_data, size = 10000) {
mote_ids <- unique(mote_data$nodeid)
n <- nrow(mote_data)
result <- mote_data[1:size,]
i <- 1
for (mote_id in mote_ids) {
if (mote_id != mote_ids[-1]) {
mote_size <- sum(mote_data$nodeid == mote_id)
sample_mote_size <- ceiling(mote_size / n * size)
} else {
sample_mote_size <- size - i + 1
}
result[i:(i+sample_mote_size-1),] <- mote_data[mote_data$nodeid == mote_id,] %>%
sample_n(size=sample_mote_size)
i <- i + 1
}
return(result)
}
table(get_samples(mote_int)$nodeid)
